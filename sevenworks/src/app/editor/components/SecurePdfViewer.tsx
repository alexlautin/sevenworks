// Security wrapper to mitigate pdfjs-dist vulnerability (CVE-2023-38895)
import React, { useState } from 'react';
import { Viewer } from '@react-pdf-viewer/core';

interface SecurePdfViewerProps {
  fileUrl: string;
  scale?: number;
}

/**
 * SecurePdfViewer - A wrapper around the PDF Viewer with additional security measures
 * to mitigate the arbitrary JavaScript execution vulnerability (CVE-2023-38895)
 */
const SecurePdfViewer: React.FC<SecurePdfViewerProps> = ({ fileUrl, scale = 1 }) => {
  const [hasAcceptedRisk, setHasAcceptedRisk] = useState(false);
  const [isErrorState, setIsErrorState] = useState(false);
  
  // Only allow viewing PDFs that were generated by our app (blob URLs)
  const isTrustedSource = fileUrl.startsWith('blob:');
  
  // Security settings for the PDF viewer
  const viewerConfig = {
    enableScripting: false, // Disable JavaScript execution in PDFs
    disableStream: false,
    disableAutoFetch: true,
    isEvalSupported: false, // Prevent eval execution
  };
  
  const handleAcceptRisk = () => {
    setHasAcceptedRisk(true);
  };
  
  const handleViewerError = () => {
    setIsErrorState(true);
  };
  
  if (!isTrustedSource) {
    return (
      <div className="p-4 bg-red-50 border border-red-300 rounded text-red-700">
        <h3 className="font-bold">Security Warning</h3>
        <p>Only PDFs generated by this application can be viewed securely.</p>
      </div>
    );
  }
  
  if (isErrorState) {
    return (
      <div className="p-4 bg-red-50 border border-red-300 rounded text-red-700">
        <h3 className="font-bold">Error Loading PDF</h3>
        <p>There was a problem loading this PDF. This could be due to file corruption or a security issue.</p>
      </div>
    );
  }

  // If user hasn't accepted risk warning yet, show disclaimer
  if (!hasAcceptedRisk && !isTrustedSource) {
    return (
      <div className="p-4 bg-yellow-50 border border-yellow-300 rounded">
        <h3 className="font-bold text-yellow-800">Security Notice</h3>
        <p className="my-2 text-yellow-700">
          PDF documents can contain potentially malicious JavaScript code.
          This application uses a PDF viewer with a known security vulnerability (CVE-2023-38895).
        </p>
        <p className="my-2 text-yellow-700">
          For security, only view PDFs from trusted sources.
        </p>
        <button
          className="mt-2 bg-yellow-600 hover:bg-yellow-700 text-white py-1 px-3 rounded"
          onClick={handleAcceptRisk}
        >
          I understand the risk, show the PDF
        </button>
      </div>
    );
  }

  return (
    <div className="secure-pdf-container">
      <Viewer
        fileUrl={fileUrl}
        onDocumentLoadError={handleViewerError}
        // @ts-ignore - Adding custom security settings
        viewerConfig={viewerConfig}
      />
    </div>
  );
};

export default SecurePdfViewer;